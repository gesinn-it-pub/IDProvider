name: CI

on:
  push:
   branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        include:
          - mediawiki_version: 1.31
            database_type: sqlite
            coverage: false
          - mediawiki_version: 1.35
            database_type: mysql
            coverage: true
          - mediawiki_version: 1.35
            database_type: sqlite
            coverage: false
          - mediawiki_version: 1.37
            database_type: mysql
            coverage: false
          - mediawiki_version: 1.37
            database_type: sqlite
            coverage: false
          - mediawiki_version: 1.38
            database_type: mysql
            coverage: false
          - mediawiki_version: 1.38
            database_type: sqlite
            coverage: false

    services:
      some-mysql:
        image: mariadb:latest
        env:
          MYSQL_ROOT_PASSWORD: database
        options: --name mysql --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=10

    container:
      image: gesinn/docker-mediawiki-${{ matrix.database_type }}:${{ matrix.mediawiki_version }}
      options: --link some-mysql:mysql

    env:
      EXT_NAME: IDProvider
      MW_INST_PATH: /var/www/html
      MW_DB_PATH: /var/www/data
      MW_EXT_PATH: /var/www/html/extensions

    steps:
      - name: Get MySQL from dump
        working-directory: ${{ env.MW_INST_PATH }}
        run: bash restore-database.sh
        if: matrix.database_type == 'mysql'

      - name: Checkout Extension
        uses: actions/checkout@v2
        with:
          path: ${{ env.EXT_NAME }}

      # Setting actions/checkout@v2 path to env.MW_EXT_PATH fails with "Repository path '/var/www/html/extensions' is not under ..."
      # See also open PR https://github.com/actions/checkout/pull/388
      - name: Move Extension
        run: |
          mkdir -p ${{ env.MW_EXT_PATH }}
          mv ${{ env.EXT_NAME }} ${{ env.MW_EXT_PATH }}

      - name: Register Extension
        run: |
          echo "wfLoadExtension( '${{ env.EXT_NAME }}' );" >> ${{ env.MW_INST_PATH }}/LocalSettings.php
          tail -n5 ${{ env.MW_INST_PATH }}/LocalSettings.php
          php ${{ env.MW_INST_PATH }}/maintenance/update.php --quick

      - name: Run Tests
        run: >
          php ${{ env.MW_INST_PATH }}/tests/phpunit/phpunit.php
          --configuration ${{ env.MW_EXT_PATH }}/${{ env.EXT_NAME }}
          --testdox
        if: matrix.coverage == false

      - name: Run Tests With Coverage
        run: >
          php ${{ env.MW_INST_PATH }}/tests/phpunit/phpunit.php
          --configuration ${{ env.MW_EXT_PATH }}/${{ env.EXT_NAME }}
          --testdox
          --coverage-clover ${{ env.MW_INST_PATH }}/docs/coverage.xml
        if: matrix.coverage == true

      - name: Upload code coverage
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ env.MW_INST_PATH }}/docs/coverage.xml
        if: matrix.coverage == true
